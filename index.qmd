---
title: "Bayesian models of brains, minds, & behaviors"
title_acronym: "bayesModels" # set up variables for re-use 
subtitle: "Stop describing, start explaining"
format:
  revealjs: 
    toc: true  # Enables a sidebar with slide titles
    toc-depth: 1 
    toc-title: "Lecture topics"  # Custom title for TOC
    slide-number: c/t
    execute: 
      enabled: true  # Ensures code execution
    navigation-mode: vertical  # Optional: Default allows 2D navigation
    chalkboard: 
      buttons: true
    preview-links: auto
    logo: images/drcmr.jpeg
    css: styles.css
    footer: 'Course Website: <a href="https://sites.google.com/view/bayesianmodelsphdschool/home">sites.google.com/view/bayesianmodelsphdschool</a>'
jupyter: python3  # Ensure Quarto uses Jupyter instead of R
resources:
  - bayesModels.pdf
---

# Interactive slider
```{python}
import ipywidgets as widgets
from IPython.display import display

slider = widgets.IntSlider()
display(slider)
```

# in2
```{python}
import numpy as np
import matplotlib.pyplot as plt
import ipywidgets as widgets
from IPython.display import display

# Function to plot probability bar chart
def plot_probability(theta=0.5):
    fig, ax = plt.subplots()
    ax.bar(["Success", "Failure"], [theta, 1 - theta], color=["blue", "gray"])
    ax.set_ylim(0, 1)
    ax.set_ylabel("Probability")
    ax.set_title(r"Probability Distribution ($\theta$)")
    plt.show()

# Slider for theta (probability)
theta_slider = widgets.FloatSlider(value=0.5, min=0, max=1, step=0.01, description=r"$\theta$")

# Interactive display
widgets.interactive(plot_probability, theta=theta_slider)
```

## blah
```{python}
import matplotlib
matplotlib.use('Agg')
import numpy as np
import matplotlib.pyplot as plt
import ipywidgets as widgets
from IPython.display import display

def plot_probability(theta=0.5):
    fig, ax = plt.subplots()
    ax.bar(["Success", "Failure"], [theta, 1 - theta], color=["blue", "gray"])
    ax.set_ylim(0, 1)
    ax.set_ylabel("Probability")
    ax.set_title(r"Probability Distribution ($\theta$)")
    plt.show()

# Slider for theta (probability)
theta_slider = widgets.FloatSlider(value=0.5, min=0, max=1, step=0.01, description=r"$\theta$")

# Interactive display
widgets.interactive(plot_probability, theta=theta_slider)
```

